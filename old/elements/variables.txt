Для программирования внутри сайта есть несколько базовых констант, разделенных на группы.

группа root объявляет суперпользователя и задает базовые параметры сайта

	ROOT_USER
	ROOT_PASS
	ROOT_EMAIL
	ROOT_LANG

группа db отвечает за тип используемой базы данных и связь с ней

	DB_TYPE
	DB_HOST
	DB_USER
	DB_PASS
	DB_NAME
	DB_PREFIX

группа path/name устанавливает названия основных папок сайта и путей к ним

	PATH_SITE
	NAME_ADMINISTRATOR
	PATH_ADMINISTRATOR
	NAME_ARTICLES
	PATH_ARTICLES
	NAME_CACHE
	PATH_CACHE
	NAME_INCLUDES
	PATH_INCLUDES
	NAME_LIBRARIES
	PATH_LIBRARIES
	NAME_MODULES
	PATH_MODULES
	NAME_TEMPLATES
	PATH_TEMPLATES
	NAME_UPLOAD
	PATH_UPLOAD
	
	NAME_PERSONAL
	NAME_PRIVATE

отдельная группа time облегчает управление временем для программирования внутри сайта

	TIME_MINUTE, 60 - одна минута, 60 секунд
	TIME_HOUR, 3600 - один час, 60 минут
	TIME_DAY, 86400 - один день или сутки, 24 часа
	TIME_WEEK, 604800 - одна неделя, 7 дней
	TIME_MONTH, 2629800 - один месяц, в среднем, считается из расчета 3 года по 365 дней + 1 високосный год на 366 дней, в каждом 12 месяцев, стоит учесть, что TIME_MONTH * 12 НЕ (!) будут равны TIME_YEAR !!!
	TIME_YEAR, 31556926 - точное рассчитанное время года в секундах




Для программирования внутри сайта можно использовать любые переменные, но есть несколько рекомендаций.



Зарезервированные системные объекты
	$lang, $template, $module, $query

Сейчас вводится дополнительные объект - $var, который будет контейнером для переменных

Зарезервированные системные переменные
	$currlang, $url

Также зарезервированные системные переменные, которые используются при переборе массивов и объектов - это:
	$item, $subitem, $i
	$key, $subkey, $k

Для пути рекомендуется использовать $path, $subpath, $p
Для массивов и объектов - $arr, $obj и другие переменные, начинающиеся на 'arr' или 'obj', например $arrTarget, $objData
Для простых чисел - $a, $b, $c, $count, $n, $num, $m, $min, $max
Для даты и времени - $d, $date, $t, $time
Для строк - $s, $str, $string

Необходимо различать дату 'date' и данные 'data'

В конце использования переменных, их стоит удалить из памяти
То же касается циклов for/while и переборов foreach
Удалять так:
	unset($_переменная_, $_переменная_);

Если не соблюдать эти нормы, то можно столкнуться с ситуацией, когда сайт станет работать некорректно из-за того,
что была затронута важная системная информация



Рекомендуется пользоваться внутренними возможностями объектов.

Так, когда вы обращаетесь к шаблону, работа целиком идет с объектом $template.
Если вы работаете с модулем, то вам поможет $module.

Оба этих объекта имеют четко заданную структуру и содержат все необходимые данные для вывода.

Также $template имеет внутри себя объект, который можно использовать как массив переменных.
Это было сделано для упрощения работы с переменными, их контролем и очисткой. Однако теперь
переменные будут перенесены в отдельный объект $var, а также объявляться и удаляться через функции.



При создании функций рекомедуется использовать следующие конструкции их названий.

Если эта функция относится к объекту:
	объект сайта, который использует эту функцию
	название этого объекта
	имя самой функции

Например: moduleArticleGet - функция модуля материалов с названием "получить"

Объекты:
	module - модуль
	template - шаблон
	router - роутер
	user - пользователь
	query - запрос

Если эта функция универсальная, то:
	тип функции
	имя функции

Например: dataClear - функция работы с данными с названием "очистить"

Типы:
	data - данные
	db - база данных




