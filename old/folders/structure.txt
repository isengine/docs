=======================
Система структуры сайта
=======================

Один из базовых принципов данной CMS - это жесткое структурирование сайта.

Занимаясь созданием сайтов, я много раз замечал, что понятие структуры зачастую не интересует ни заказчиков, ни разработчиков. Что непременно приводит к печальным последствиям, когда сайт превращается в хаотичное нагромождение страниц и разделов без особой систематизации. Конечно, без структуры можно построить сайт. Но это будет неправильный сайт, который превратится в большую проблему.

Так почему бы не сделать структуру изначальным требованием?

Поэтому без структуры сайт на данной CMS не будет работать вообще. Минимальным требованием для работы сайта является наличие хотя бы одного пункта структуры сайта - базовой страницы.

========
Гибкость
========

Жесткое структурирование сайта не означает, что сама структура должна быть жесткой. Наоборот, структура сайта должна быть максимально гибкой. В любом сайте возможны изменения. Тем более, что <принципы>первый принцип данной CMS - максимальное облегчение работы в разработке и управлении сайтом.

Любой сайт подвержен изменениям. И изменения - одна из главных причин смены ресурсов, обслуживающих сайт (персонала, компаний-подрядчиков, движков сайтов, хостинг-провайдеров). Но так быть не должно! Система должна быть гибкой и позволять сделать все, что касается требований заказчика.

Гибкость обеспечивается назначением типов. За счет типов могут быть реализованы одностраничные сайты, модальные окна, служебные подразделы. И все они будут присутствовать в общей структуре.

Основное применение структуры - это <роутер>роутер и модуль вывода <меню>меню сайта. Например, один и тот же раздел можно скрыть в одном меню, но показать в другом, а третье меню можно вообще сделать на отображение только пунктов из этого раздела. При этом само <меню>меню не потребует каких-либо сложных дополнительных настроек. А в случае добавления или исключения пунктов из раздела, они также будут автоматически добавлены или исключены из меню, также без внесения отдельных изменений в сам модуль меню сайта.

=======================
Инициализация структуры
=======================

Структура сайта выглядит в виде карты формата json:

	"раздел|тип-раздела" : {
		"подраздел|тип-подраздела" : {
			"пункт|тип-пункта"
		}
	}

Структура может содержать любое число разделов и пунктов любой вложенности.

Пункты и разделы являются элементами структуры.

По-умолчанию каждому элементу структуры должна быть назначена страница в <шаблон>шаблоне.

(!) Сложность структуры влияет только на скорость ее обработки.

==============
Типы элементов
==============

Тип элемента структуры назначается через знак вертикальной черты "|" от названия элемента.

На данный момент реализованы следующие типы:

	home - обозначает ссылку на домашнюю (главную) страницу сайта.
	group - ставится на раздел, обозначает просто группу пунктов и разделов, чтобы лучше было ориентироваться в структуре. У получаемых ссылок не будет принадлежности к группе. Это означает, что в такой структуре: {{ "documents" : { "about" } }} пункт "about" будет иметь ссылку "/documents/about/", а в такой структуре: {{ "documents|group" : { "about" } }} пункт "about" будет иметь ссылку "/about/".
	nolink - элемент примет вид ничего не значащей ссылки вида {{ javascript:void(0); }}. Этот тип используется, когда для раздела нет страницы и нужно, чтобы при щелчке ничего не происходило.
	none - пустой элемент, по аналогии с предыдущим. В такой структуре: {{ "documents" : { "about|none" } }} ссылка примет вид "/documents/#".
	hash - внутренняя ссылка страницы (с учетом принадлежности). В такой структуре: {{ "documents" : { "about|hash" } }} ссылка примет вид "/documents/#about".
	action - элемент для вызова действия. Использовать стоит только если его необходимо включить в структуру. Например, форма входа или регистрации, которая может быть вызвана из разных частей сайта. Ссылка всегда будет без учета принадлежности, т.е. в такой структуре: {{ "documents" : { "about|action" } }} примет вид "#about".
	url - элемент, копирующий ссылку на внешний ресурс. Устанавливается в виде {{ "item|url" : "https://www.othersite.com/link" }}, причем ссылка автоматически приводится в относительно безопасный вид - кодировка символов только латиница, различные get-параметры страницы, по типу {{ "?page=1&sort=id }} обрезаются.
	params - указывает, что для этого элемента разрешены <роутер>параметры вида "?name=value" или "/param_name/param_value/"
	article - для этого элемента при использовании <базовый шаблон>базового шаблона автоматически подгружается <контент>модуль статей. Этот тип так же как "params" разрешает <роутер>параметры, но первый параметр всегда считается названием статьи

(!) Один элемент может иметь один тип.

(!) Если в структуре есть элемент с названием "home", он автоматически будет интерпретирован как ссылка на домашнюю (главную) страницу сайта. Для него указывать тип не обязательно.

================
Примеры структур
================

Структура одноуровневого сайта:

	"nome",
	"news",
	"price",
	"about",
	"contacts"

Структура одностраничного сайта:

	"nome",
	"news|hash",
	"price|hash",
	"about|hash",
	"contacts|hash"

Структура многоуровневого сайта:

	"home",
	"documents" : {
		"about",
		"history",
		"structure",
		"price"
	},
	"news",
	"contacts"

Структура многоуровневого сайта с типами:

	"home",
	"documents|nolink" : {
		"about",
		"history",
		"structure",
		"price"
	},
	"news|articles",
	"contacts",
	"group|group" : {
		"privacy",
		"sitemap"
	}

==================
Структуры разделов
==================

Для всего сайта, даже если он использует несколько шаблонов, используется одна общая структура. Однако есть разделы сайтов, для которых система будет погружать (при наличии) отдельные структуры.

Такими разделами являются <администрирование>административный раздел и <пользователи>разделы пользователя, заданные константами <переменные>PERSONAL и <переменные>PRIVATE.
