сама структура меню выглядит так:

nav
.a_brand
..div/img_logo
...i_icon
...span_title
...p_slogan
.a/button_button
.div_body
..elements -> before
..ul/div_mainul
...elements -> beforeitems
...li
....div_wrapper
.....a
......div_inner...
......div_imagewrapper
.......img_linkimage
......i
......p/div/span_linkwrapper
......ul/div
.......li
........div_wrapper
.........a
..........div_inner...
..........div_imagewrapper
...........img_linkimage
..........i
..........p/div/span_linkwrapper
...elements -> afteritems
..elements -> after

{
	"logo" : true,
	// вывод лого
	// значения: true, false
	// нужен, если вы хотите выводить лого в меню
	
	"title" : true,
	// вывод заголовка
	// значения: true, false
	// нужен, если вы хотите выводить заголовок в меню
	// чтобы установить иконку перед текстом, пропишите ее класс в lang -> titleicon
	// чтобы установить подпись под текстом, пропишите ее в lang -> titleslogan
	
	"bootstrap" : true,
	// включить стандартное меню bootstrap
	// значения: true, false	
	// нужен, если вы хотите использовать стандартные классы bootstrap
	// этот пункт также влияет на некоторые из следующих параметров
	
	"collapse" : true,
	// включить сворачивание меню
	// значения: true, false	
	// нужен, если вы хотите чтобы меню сворачивалось на экранах с небольшим разрешением
	// работает только при bootstrap = true
	
	"onepage" : true,
	// одностраничное представление сайта
	// значения: true, false, array string
		// true, если хотите сделать весь сайт как одностраничник
		// или массив с перечнем тех пунктов меню, ссылка на которых идет по id с хэштегом
	
	"levels" : false
	// отображение уровней структуры в меню
	// значения: true, false, number, string
		// указывается максимальное число отображаемых уровней
		// ноль - все уровни
		// false и true преобразуются в 0 и 1 соответственно
		// число можно указывать в виде строки
	
	"custom" : ["home", "hotel", "gallery", "send"],
	// кастом меню
	// значения: string, array string
		// одиночное значение, если нужно отобразить только один раздел структуры
		// или массив с перечнем тех пунктов структуры, которые нужно отобразить
		// по-умолчанию кастомное меню выводит все указанные элементы на верхнем уровне меню,
		// как если бы они были указаны в структуре на одном верхнем уровне,
		// ссылки при этом сохраняются!
		// через знак двоеточия можно задавать дополнительные параметры:
		//   нет параметра - выводит только указанный пункт меню
		//   list - выводит все подпункты этого меню, если они есть
		//   open - вместо этого пункта выводит все вложенные в него подпункты
	
	"disable" : ["home"],
	// исключение пунктов меню
	// значения: array string
	// массив с перечнем тех пунктов меню, которые нужно исключить
	
	"modal" : ["send"],
	// модальные окна
	// значения: array string
	// массив с перечнем тех пунктов меню, щелчок на которые вызывает модальное окно bootstrap
	
	"nosubmenu" : ["documents"],
	// запретить подменю
	// значения: true, false, array string
	// если true, то все пункты меню становятся ссылками
	// если массив, то делает эти пункты ссылками,
	
	"generator" : [],
	// генератор подменю из материалов
	// значения: array
	// Если вы хотите генерировать подпункты меню из материалов автоматически, то вам нужно прописать следующее:
	// "generator" : { "name" : "field:count:filter:sort-target:sort-type" }
	// где name - имя раздела, откуда взять статьи
	// если указать первый параметр (field), то из этого поля материала будет выводится заголовок пункта меню, иначе заголовок будет браться из языкового массива
	// если указать второй параметр (count), то будет выводиться только это число материалов
	// если указать третий параметр (filter), то по этому параметру будут добавляться только те материалы, в которых есть это поле и оно не пустое и не false
	// если указать четвертый и пятый параметры (sort), то будет проводится сортировка материалов:
	//   sort-target - устанавливает поле сортировки: key/value,
	//   sort-type - задает порядок сортировки: asc/desc
	// для пропуска одного из этих параметров, указывайте значение 0

	"separator" : "",
	// разделитель пунктов
	// значения: string
	// если вы хотите включить простой разделитель пунктов меню, то его можно задать здесь
	
	"icons" : {
	// массив с указанием пунктов меню и классов иконок для этих пунктов
		"home" : "fas fa-globe"
	}
	
	"classes" : {
	// классы для элементов
	// значения: string
	// элементы: nav, body, wrapper, linkwrapper, inner, mainul, ul, li, active, submenu, brand, button, logo
	// массив с указанием объектов меню и доп.классов bootstrap для этих объектов
		
		"bootstrap" : ""
		// (!) ПОКА НЕ РЕАЛИЗОВАНО
		// значения: true, false
		// разрешает/запрещает классы bootstrap
		
		"defaults" : ""
		// значения: true, false
		// разрешает/запрещает классы по-умолчанию
		
		"nav" : "sticky-top navbar-expand-lg navbar-light bg-light",
		// классы для навбара
		
		"body" : "",
		// классы для div с классом body, который если задан, то служит оберткой меню ul
		
		"brand" : "",
		// классы для ссылки с логотипом
		
		"button" : "navbar-toggler-icon",
		// классы для кнопки сворачивания-разворачивания меню
		
		"logo" : ""
		// классы для непосредственно изображения логотипа
		
		"submenu" : "",
		// классы для li, содержащего субменю
		
		"active" : "",
		// классы для активного li
		
		"ul" : "",
		// классы для ul
		// общие идут без вложений
		// для первого уровня идут c вложением "menu" : {}
		// для второго уровня идут с вложением "submenu" : {}
		
		"li" : "",
		// классы для li
		// общие идут без вложений
		// для первого уровня идут c вложением "item/submenu" : {}
		// для второго уровня идут с вложением "subitem" : {}
		// можно также задать классы для типа "separator" : {}
		
		"link" : "",
		// классы для a
		// общие идут без вложений
		// для первого уровня идут c вложением "item/submenu" : {}
		// для второго уровня идут с вложением "subitem" : {}
		
		"home" : "",
		// класс для ссылки на главную страницу
		
		"wrapper" : "",
		// классы для обертки (см. ниже)
		
		"linkwrapper" : "",
		// классы для обертки ссылки (см. ниже)
		
		"linkimage" : "",
		// классы для изображения ссылки (см. ниже)
		
		"imagewrapper" : "",
		// классы для обертки изображения ссылки (см. ниже)
		
		"inner" : "",
		// общие классы для всех вложений (см. выше)
		
	}
	"elements" : {
	// управление элементами меню
	// значения: true, false
	// элементы: nav, body, wrapper, linkwrapper, inner, collapselink, before, after
	// массив с настройкой элементов меню
		
		"nav" : true,
		// разрешает/запрещает nav
		// всегда включен при bootstrap
		// теперь его можно принудительно выключить, даже при bootstrap, указав значение 'disable'
		
		"body" : true,
		// разрешает/запрещает div с классом body
		// этот контейнер служит оберткой меню ul
		
		"collapselink" : true,
		// устанавливает тип кнопки collapse
		// true - a / false и по-умолчанию - button
		
		"beforeitems" : "",
		// значения: string
		// если вы хотите выводить дополнительную информацию перед пунктами меню, введите сюда название подключаемого шаблона
		
		"afteritems" : "",
		// значения: string
		// если вы хотите выводить дополнительную информацию после пунктов меню, введите сюда название подключаемого шаблона
		
		"before" : "",
		// значения: string
		// если вы хотите выводить левую или верхнюю часть меню, введите сюда название подключаемого шаблона
		
		"after" : "",
		// значения: string
		// если вы хотите выводить правую или нижнюю часть меню, введите сюда название подключаемого шаблона
		
		"ul" : "",
		// значения: true, false, string: div, disable
		// общие идут без вложений
		// для первого уровня идут c вложением "menu" : {}
		// для второго уровня идут с вложением "submenu" : {}
		
		"li" : "",
		// значения: true, false, string: div, disable
		// true/false не влияют на результат - они включают li,
		// div переключает имя тэга с li на div
		// disable выключает элемент из структуры, но вложения (ссылки) остаются
		// общие идут без вложений
		// для первого уровня идут c вложением "item/submenu" : {}
		// для второго уровня идут с вложением "subitem" : {}
		// можно также управлять элементом типа "separator" : {}
		
		"wrapper" : true,
		// если true, то перед ссылкой создается обертка из контейнера div
		
		"linkwrapper" : true,
		// значения: true, false, string
		// если true, то сама ссылка оборачивается в контейнер span
		// также можно прописать значения p и div для обертывания в соответствующий контейнер
		
		"linkimage" : true,
		// значения: true, false, string
		// если true, то внутрь ссылки добавляется контейнер img с изображением
		// этот контейнер включается во wrapper, но не включается в linkwrapper
		// ссылка на изображение идет в папку upload, затем в подпапку с названием модуля (по-умолчанию)
		// или заданную здесь же в качестве строки (можно ставить слеши)
		// само изображение должно называться по названию текущего элемента с расширением png
		// если такого файла нет, то контейнер с изображением не выводится
		
		"imagewrapper" : true,
		// значения: true, false
		// если true, то изображение ссылки оборачивается в контейнер div
		
		"inner" : ["", ""],
		// значения: array string
		// если вы хотите внутри ссылки вывести несколько контейнеров, то задайте массив их классов
		// все контейнеры будут вложены параллельно внутрь ссылки, но не друг в друга
		
		"homeactive" : false
		// значения: true, false
		// если true, то элемент со ссылкой на домашнюю страницу будет отображаться по правилам ссылки
		// если false, то элемент никогда не будет с активными классами
		
	}
	
}
